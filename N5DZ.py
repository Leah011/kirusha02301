'''
#(№ 2578) (Б.С. Михлин) Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [394441; 394505],
# числа, имеющие максимальное количество различных делителей.
# Если таких чисел несколько, то найдите минимальное из них. В ответе запишите два числа: количество делителей найденного числа и само число.
#2578
def kol_del(x):
    d = set()
    for i in range(1,int(x**0.5)+1):
        if x%i==0:
            d.add(i)
            d.add(x//i)
    return(len(d))
res=[]
for j in range(394_441,394_505):
    res.append([kol_del(j),j])
res.sort()
for kd,f in res:
    if kd== res[-1][0]:
        print(kd,f)
        break
'''


'''
#(№ 2587) (Б.С. Михлин) Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [194441; 196500]
# простые числа (т.е. числа у которых только два делителя: 1 и само число), оканчивающиеся на 93.
# Для каждого простого числа выведите его порядковый номер (начиная с единицы), а затем – само число.
#2587
def prost(x):
    for i in range(2,int(x**0.5)+1):
        if x % i ==0: return False
    return True
k=1
for x in range(194441,196500+1):
    if prost(x)==True and (str(x)[-2:])=="93":
        print(k,x)
        k+=1
'''


'''
#(№ 2589) (Д.Ф. Муфаззалов) Два числа называются дружественными если сумма собственных делителей
# (то есть всех положительных делителей, отличных от самого́ числа) любого их них равна другому числу. Например, числа 220 и 284 дружественные.
#Выведите в порядке возрастания числа в диапазоне [2; 30000], имеющие дружественное число, большее чем само это число,
# и через пробел это дружественное число. Каждое следующие число из указанного диапазона выводите на новой строке.
#2589
def sum_delit(x):
    summ = 0
    for i in range(2,int(x**0.5)+1):
        if x%i==0:
            summ+=i+x//i
    return summ+1
for j in range(2,30_000 +1):
    chis1 = sum_delit(j)
    if sum_delit(chis1)==j and j<chis1:
        print(j,chis1)
'''


'''
#(№ 2597) (К. Амеличев) Среди целых чисел, принадлежащих числовому отрезку [3159; 31584],
# найдите числа, которые являются простыми. Ответом будет сумма цифр найденных чисел.
#2597
def prost(x):
    for i in range(2,int(x**0.5)+1):
        if x % i ==0: return False
    return True
summ=0
for i in range(3159,31584+1):
    if prost(i)==True:
        for j in str(i):
            summ+=int(j)
print(summ)
'''



#Уровень medium
'''
#(№ 2593) (К. Амеличев) Среди целых чисел, принадлежащих числовому отрезку [2945; 18294],
# найдите числа, не делящиеся на вторую степень ни одного числа, кроме единицы. Ответом будет сумма цифр найденных чисел.
#2593
def chisla(x):
    for i in range(2,int(x**0.5)+1):
        if x%(i**2)==0:
            return False
    return True
summ = 0
for j in range(2945,18294+1):
    if chisla(j)==True:
        for h in str(j):
            summ+=int(h)
print(summ)
'''


'''
#(№ 2600) Среди целых чисел, принадлежащих числовому отрезку [268312;336492],
# найдите числа, которые представляют собой произведение двух различных простых делителей.
# Запишите в ответе количество таких чисел и минимальное из них.
#2600
def prost(x):
    for q in range(2,int(x**0.5)+1):
        if x % q ==0: return False
    return True

def delit(y):
    de = set()
    for i in range(2,int(y**0.5)+1):
        if y%i==0:
            de.add(i)
            de.add(y//i)
    return(de)

f=[]
for j in range(268_312,336_492+1):
    for h in delit(j):
        if prost(h)==True and prost(j//h)==True and h!=j//h:
            f.append(j)
print(len(set(f)),min(f))
'''


'''
#(№ 2843) Назовём нетривиальным делителем натурального числа его делитель, не равный единице и самому числу.
# Найдите все натуральные числа, принадлежащие отрезку [4234679; 10157812] и имеющие ровно три нетривиальных делителя.
# Для каждого найденного числа запишите в ответе само число и его наибольший нетривиальный делитель.
# Найденные числа расположите в порядке возрастания.
#2843
def delit(y):
    de = set()
    for i in range(2,int(y**0.5)+1):
        if y%i==0:
            de.add(i)
            de.add(y//i)
        if len(de)>3:return (set())
    return(de)
for j in range(4_234_679,10_157_812):
    if (j**0.5)%1==0:
        a = set(delit(j))
        if len(a)==3:
            print(j,max(a))
'''




'''
#Уровень hard
#(№ 2610) Рассматриваются целые чиасл, принадлежащих числовому отрезку [105673; 220784],
# которые представляют собой произведение трёх различных простых делителей.
# В ответе запишите количество таких чисел и максимальное из них.
#2610
def prost(x):
    for q in range(2,int(x**0.5)+1):
        if x % q ==0: return False
    return True

def delit(y):
    de = set()
    for i in range(2,int(y**0.5)+1):
        if y%i==0:
            de.add(i)
            de.add(y//i)
    return(de)

d=[]
for j in range(105_673,220_784+1):
    f = []
    for h in delit(j):
        if prost(h)==True:
            f.append(h)
    if len(f)==3 and int(f[0])*int(f[1])*int(f[2])==j:
        d.append(j)
print(len(d),max(d))
'''




'''
#(№ 2615) Назовём нетривиальным делителем натурального числа его делитель, не равный единице и самому числу.
# Найдите все натуральные числа, принадлежащие отрезку [525784203; 728943762] и имеющие ровно три нетривиальных делителя.
# Для каждого найденного числа запишите в ответе два числа: само число и его наибольший нетривиальный делитель.
# Найденные числа расположите в порядке возрастания.
#2615
def delit(y):
    de = set()
    for i in range(2,int(y**0.5)+1):
        if y%i==0:
            de.add(i)
            de.add(y//i)
        if len(de)>3:return set()
    return(de)
for j in range(525_784_203,728_943_762):
    if (j**0.5)%1==0:
        a = set(delit(j))
        if len(a)==3:
            print(j,max(a))
#решена код работает (1-2 минуты)
'''


'''
#(№ 2838) (Е. Джобс) Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [321654; 654321],
# числа у которых есть только нечетные делители, количество которых больше 70.
# Делители 1 и само число не учитываются.
# Для каждого найденного числа запишите само число и максимальный по величине делитель.
#2838
def delit(y):
    f = set()
    de = set()
    for i in range(2,int(y**0.5)+1):
        if y%i==0:
            if i%2==0:return(f)
            if i%2==1: de.add(i)
            if (y/i)%2==1: de.add(y//i)
    return(de)
for j in range(321_654,654_321+1):
    a = set(delit(j))
    if len(a) > 70:
        print(j,max(a))  
'''



'''
#(№ 3159) Рассмотрим произвольное натуральное число, представим его всеми возможными способами в виде произведения двух натуральных чисел
# и найдём для каждого такого произведения разность сомножителей.
# Например, для числа 18 получим: 18 = 18*1 = 9*2 = 6*3, множество разностей содержит числа 17, 7 и 3.
# Подходящей будем называть пару сомножителей, разность между которыми не превышает 90.
# Найдите все натуральные числа, принадлежащие отрезку [500000; 1000000], у которых есть не менее трёх подходящих пар сомножителей.
# В ответе перечислите найденные числа в порядке возрастания, справа от каждого запишите наибольший из всех сомножителей, образующих подходящие пары.
#3159
def mnoj(x):
    parmnoj=[]
    for j in range(1,int(x**0.5)+1):
        if x % j ==0:
            parmnoj.append(j)
            parmnoj.append(x//j)
    return parmnoj



for i in range(500_000,1_000_000+1):
    d = mnoj(i)
    if len(d)>=6:
        k = 0
        max = 0
        for m in range(1,len(d),2):
            if abs(int(d[m-1])-int(d[m]))<=90:
                k+=1
                if int(d[m])>max:
                    max = int(d[m])
        if k>=3:
            print(i,max)
'''



'''
#(№ 3435) (А. Рулин) Рассматривается множество целых чисел, принадлежащих числовому отрезку [854321; 1087654].
# Найдите числа, нетривиальные делители которых образуют арифметическую прогрессию с разностью d = 10.
# В ответе для каждого такого числа (в порядке возрастания) запишите сначала само число,
# а потом – его минимальный нетривиальный делитель.
#3435
def delit(y):
    de = []
    for i in range(2,int(y**0.5)+1):
        if y%i==0:
            de.append(i)
            de.append(y//i)
    return(de)

for j in range(854_321,1_087_654+1):
    delt = sorted(delit(j))
    if len(delt)>=2:
        for h in range(1,len(delt)):
            if int(delt[h-1])+10!=int(delt[h]):
                break
        else:
            print(j,min(delt))
#другой способ
# for j in range(854_321,1_087_654+1):
#     delt = sorted(delit(j))
#     k = 0
#     for h in range(1,len(delt)):
#         if int(delt[h-1])+10==int(delt[h]):
#             k+=1
#     if k+1 == len(delt):
#         print(j,min(delt))
'''


'''
#(№ 4118) (А. Кабанов) Обозначим через M разность максимального и минимального числа среди простых делителей целого числа,
# не считая самого числа. Если таких делителей у числа нет, то считаем значение M равным нулю.
# Напишите программу, которая перебирает целые числа, большие 450000,
# в порядке возрастания и ищет среди них такие, для которых значение M при делении на 29 даёт в остатке 11.
# Выведите первые 4 найденных числа в порядке возрастания, справа от каждого числа запишите соответствующее значения M.
#4118
def prost(x):
    for q in range(2,int(x**0.5)+1):
        if x % q ==0: return False
    return True


def delit(y):
    de = []
    for i in range(2,int(y**0.5)+1):
        if y%i==0:
            if prost(i)==True:de.append(i)
            if prost(y//i)==True:de.append(y//i)
    return(de)

k=0
chis = 450_000
while k<4:
    f = sorted(delit(chis))
    if len(f)>1:
        M = int(f[-1])-int(f[0])
        if M%29==11:
            print(chis,M)
            k+=1
    chis+=1
'''